!function(t){t.languages.http={"request-line":{pattern:/^(?:POST|GET|PUT|DELETE|OPTIONS|PATCH|TRACE|CONNECT)\s(?:https?:\/\/|\/)\S+\sHTTP\/[0-9.]+/m,inside:{property:/^(?:POST|GET|PUT|DELETE|OPTIONS|PATCH|TRACE|CONNECT)\b/,"attr-name":/:\w+/}},"response-status":{pattern:/^HTTP\/1.[01] \d+.*/m,inside:{property:{pattern:/(^HTTP\/1.[01] )\d+.*/i,lookbehind:!0}}},"header-name":{pattern:/^[\w-]+:(?=.)/m,alias:"keyword"}};var a,e,n,i,p=t.languages,s={"application/javascript":p.javascript,"application/json":p.json||p.javascript,"application/xml":p.xml,"text/xml":p.xml,"text/html":p.html,"text/css":p.css},r={"application/json":!0,"application/xml":!0};for(var T in s){s[T]&&(a=a||{},e=r[T]?(i=void 0,i=(n=T).replace(/^[a-z]+\//,""),"(?:"+n+"|"+("\\w+/(?:[\\w.-]+\\+)+"+i+"(?![+\\w.-])")+")"):T,a[T.replace(/\//g,"-")]={pattern:RegExp("(content-type:\\s*"+e+"[\\s\\S]*?)(?:\\r?\\n|\\r){2}[\\s\\S]*","i"),lookbehind:!0,inside:s[T]})}a&&t.languages.insertBefore("http","header-name",a)}(Prism);